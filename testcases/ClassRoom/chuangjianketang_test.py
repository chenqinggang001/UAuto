# NOTE: Generated By HttpRunner v3.1.6
# FROM: har\ketang.har


from httprunner import HttpRunner, Config, Step, RunRequest, RunTestCase


class TestCaseKetang(HttpRunner):

    config = (
        Config("教师创建课堂")
        .variables(HOST="${ENV(TestHOST)}")
        .base_url("${HOST}")
        .verify(False)
        .export(*[])
    )

    teststeps = [
        Step(
            RunRequest("课堂列表")
            .get("/wisdomClassroom/getClassroomList")
            .with_params(
                **{
                    "ocId": "${ENV(LoginNameCourseAdmin_ocId)}",
                    "classId": "",
                    "teacherId": "${ENV(LoginNameCourseAdmin_userid)}",
                    "status": "",
                    "pageNum": "1",
                    "pageSize": "10",
                    "lang": "zh",
                }
            )
            .with_headers(
                **{
                    "Authorization": "${ENV(LoginNameCourseAdmin_token)}",
                    "Content-Type": "application/json"
                }
            )
            .validate()
            .assert_equal("status_code", 200)
        ),
        Step(
            RunRequest("/wisdomClassroom/add")
            .post("/wisdomClassroom/add")
            .with_params(**{"lang": "zh"})
            .with_headers(
                **{
                    "Authorization": "${ENV(LoginNameCourseAdmin_token)}",
                    "Content-Type": "application/json"
                }
            )
            .with_json(
                {
                    "id": 0,
                    "ocId": "${ENV(LoginNameCourseAdmin_ocId)}",
                    "status": 0,
                    "title": "%s 课堂"%"${get_Nowtime()}",
                    "classes": [
                        {"classId": "${ENV(LoginNameCourseAdmin_class3)}", "className": "测试班级3"},
                        {"classId": "${ENV(LoginNameCourseAdmin_class2)}", "className": "测试班级2"},
                        {"classId": "${ENV(LoginNameCourseAdmin_class1)}", "className": "测试班级1"},
                    ],
                }
            )
            .extract()
            .with_jmespath("body.result.id","classroomid")
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal("body.message", "成功")
        ),
        Step(
            RunRequest("删除课堂")
            .delete("/wisdomClassroom/delete/${classroomid}")
            .with_params(**{"lang": "zh"})
            .with_headers(
                **{
                    "Authorization": "${ENV(LoginNameCourseAdmin_token)}",
                    "Content-Type": "application/json"
                }
            )
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal("body.message", "成功")
        ),
    ]


if __name__ == "__main__":
    TestCaseKetang().test_start()
